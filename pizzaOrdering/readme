========================================================================
Project Name: Online Pizza Ordering System (OPOS)
Author: Sherwin John C. Tragura
Description: This prototype is an API-based ordering system for a small Pizza   
    House that manages orders from valid online users and generates orders and payments. The objective is to showcase Flask syntax in building RESTful services.

    This project uses the Application Factory design approach in managing the project directories.
========================================================================

A. Project Directory

--- ch03 (main project directory)
      --- app  - contains all the  modules and their respective components, 
                        such API endpoint functions, repository, and services
               - contains the model directory that has the model classes
               - contains the __init__.py - the heart of the applications
                     - contains all the initialization, setups, and   
                          configurations
                     - creates the Flask instance and returns it to main.py
              
      --- main.py -  the main module that imports the create_app() from 
          modules/__init__.py, encoders and related middlewares, error handlers, and event functions

      --- log_msg.txt.i - log files generated by the logger
      --- tests - the pytest folder containing test files for testing Flask     
                components in each Blueprint module

B. Configuration files 
    config_dev.toml - configuration variables written in TOML for development stage
     
C. Database Configurations
   db_dump - contains the opos.sql dump file, which contains dummy test data
           - database platform is PostgreSQL 

D. Dependencies
   --- Create a Python virtual env (e.g., ch03-env) using the venv module first before running the dependency file.
   --- requirements.txt - contains the updated modules just run it inside your venv directory using:
                  python -m pip install -r requirements.txt --upgrade

E. Running the application:
   --- Run the command python main.py inside the enabled ch03-env.
   --- You can run the API using cUrl command (e.g., curl -i -X PATCH 
         http:// localhost:5000/patch -d "{\"foo\": \"bar\"}" -H "Content-Type: application/json") or Postman tool
